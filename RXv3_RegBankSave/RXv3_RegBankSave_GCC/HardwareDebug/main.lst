   1                             		.file	"main.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.section	.text.startup.main,"ax",@progbits
   5                             		.global	_main
   7                             	_main:
   8                             	.LFB3:
   9                             		.file 1 "../src/main.c"
   1:../src/main.c **** #include "r_smc_entry.h"
   2:../src/main.c **** 
   3:../src/main.c **** #if defined(__RXV3) && !defined(BSP_BOARD_GENERIC_RX66T)
   4:../src/main.c **** #define __BANK 1
   5:../src/main.c **** #endif
   6:../src/main.c **** 
   7:../src/main.c **** void main(void);
   8:../src/main.c **** #if defined(__RXV3)
   9:../src/main.c **** void Check_Using_DSQRT_FSQRT(void);
  10:../src/main.c **** void Check_Not_Using_DSQRT_FSQRT(void);
  11:../src/main.c **** void (*fp_Check_Using_DSQRT_FSQRT)(void);
  12:../src/main.c **** void (*fp_Check_Not_Using_DSQRT_FSQRT)(void);
  13:../src/main.c **** #endif
  14:../src/main.c **** 
  15:../src/main.c **** #define VECT_TRAP_0 0
  16:../src/main.c **** #define VECT_TRAP_1 1
  17:../src/main.c **** #define VECT_TRAP_2 2
  18:../src/main.c **** #if defined(__BANK)
  19:../src/main.c **** #define VECT_TRAP_3 3
  20:../src/main.c **** #define VECT_TRAP_4 4
  21:../src/main.c **** #endif
  22:../src/main.c **** 
  23:../src/main.c **** void main(void)
  24:../src/main.c **** {
  10                             		.loc 1 24 1 view -0
  25:../src/main.c ****     R_BSP_SET_IPL( MY_BSP_CFG_UNNESTED_IPL_MAX - 1 );
  11                             		.loc 1 25 5 view .LVU1
  12 0000 75 70 08                		mvtipl	#8
  26:../src/main.c ****     R_BSP_INT( VECT( TRAP, 0 ) );
  13                             		.loc 1 26 5 view .LVU2
  14 0003 75 60 00                		int	#0
  27:../src/main.c ****     R_BSP_INT( VECT( TRAP, 1 ) );
  15                             		.loc 1 27 5 view .LVU3
  16 0006 75 60 01                		int	#1
  28:../src/main.c ****     R_BSP_INT( VECT( TRAP, 2 ) );
  17                             		.loc 1 28 5 view .LVU4
  18 0009 75 60 02                		int	#2
  29:../src/main.c **** #if defined(__BANK)
  30:../src/main.c ****     R_BSP_INT( VECT( TRAP, 3 ) );
  19                             		.loc 1 30 5 view .LVU5
  20 000c 75 60 03                		int	#3
  31:../src/main.c ****     R_BSP_INT( VECT( TRAP, 4 ) );
  21                             		.loc 1 31 5 view .LVU6
  22 000f 75 60 04                		int	#4
  32:../src/main.c **** #endif
  33:../src/main.c **** 
  34:../src/main.c ****     R_BSP_SET_IPL( MY_BSP_CFG_UNNESTED_IPL_MAX );
  23                             		.loc 1 34 5 view .LVU7
  24 0012 75 70 09                		mvtipl	#9
  35:../src/main.c ****     R_BSP_INT( VECT( TRAP, 0 ) );
  25                             		.loc 1 35 5 view .LVU8
  26 0015 75 60 00                		int	#0
  36:../src/main.c ****     R_BSP_INT( VECT( TRAP, 1 ) );
  27                             		.loc 1 36 5 view .LVU9
  28 0018 75 60 01                		int	#1
  37:../src/main.c ****     R_BSP_INT( VECT( TRAP, 2 ) );
  29                             		.loc 1 37 5 view .LVU10
  30 001b 75 60 02                		int	#2
  38:../src/main.c **** #if defined(__BANK)
  39:../src/main.c ****     R_BSP_INT( VECT( TRAP, 3 ) );
  31                             		.loc 1 39 5 view .LVU11
  32 001e 75 60 03                		int	#3
  40:../src/main.c ****     R_BSP_INT( VECT( TRAP, 4 ) );
  33                             		.loc 1 40 5 view .LVU12
  34 0021 75 60 04                		int	#4
  41:../src/main.c **** #endif
  42:../src/main.c **** 
  43:../src/main.c ****     R_BSP_SET_IPL( MY_BSP_CFG_UNNESTED_IPL_MAX + 1 );
  35                             		.loc 1 43 5 view .LVU13
  36 0024 75 70 0A                		mvtipl	#10
  44:../src/main.c ****     R_BSP_INT( VECT( TRAP, 0 ) );
  37                             		.loc 1 44 5 view .LVU14
  38 0027 75 60 00                		int	#0
  45:../src/main.c ****     R_BSP_INT( VECT( TRAP, 1 ) );
  39                             		.loc 1 45 5 view .LVU15
  40 002a 75 60 01                		int	#1
  46:../src/main.c ****     R_BSP_INT( VECT( TRAP, 2 ) );
  41                             		.loc 1 46 5 view .LVU16
  42 002d 75 60 02                		int	#2
  47:../src/main.c **** #if defined(__BANK)
  48:../src/main.c ****     R_BSP_INT( VECT( TRAP, 3 ) );
  43                             		.loc 1 48 5 view .LVU17
  44 0030 75 60 03                		int	#3
  49:../src/main.c ****     R_BSP_INT( VECT( TRAP, 4 ) );
  45                             		.loc 1 49 5 view .LVU18
  46 0033 75 60 04                		int	#4
  50:../src/main.c **** #endif
  51:../src/main.c **** 
  52:../src/main.c **** #if 0 /* later */
  53:../src/main.c ****     R_BSP_SET_IPL( BSP_CFG_FIT_IPL_MAX - 1 );
  54:../src/main.c ****     R_BSP_INT( VECT( TRAP, 0 ) );
  55:../src/main.c ****     R_BSP_INT( VECT( TRAP, 1 ) );
  56:../src/main.c ****     R_BSP_INT( VECT( TRAP, 2 ) );
  57:../src/main.c **** #if defined(__BANK)
  58:../src/main.c ****     R_BSP_INT( VECT( TRAP, 3 ) );
  59:../src/main.c ****     R_BSP_INT( VECT( TRAP, 4 ) );
  60:../src/main.c **** #endif
  61:../src/main.c **** 
  62:../src/main.c ****     R_BSP_SET_IPL( BSP_CFG_FIT_IPL_MAX );
  63:../src/main.c ****     R_BSP_INT( VECT( TRAP, 0 ) );
  64:../src/main.c ****     R_BSP_INT( VECT( TRAP, 1 ) );
  65:../src/main.c ****     R_BSP_INT( VECT( TRAP, 2 ) );
  66:../src/main.c **** #if defined(__BANK)
  67:../src/main.c ****     R_BSP_INT( VECT( TRAP, 3 ) );
  68:../src/main.c ****     R_BSP_INT( VECT( TRAP, 4 ) );
  69:../src/main.c **** #endif
  70:../src/main.c **** 
  71:../src/main.c ****     R_BSP_SET_IPL( BSP_CFG_FIT_IPL_MAX + 1 );
  72:../src/main.c ****     R_BSP_INT( VECT( TRAP, 0 ) );
  73:../src/main.c ****     R_BSP_INT( VECT( TRAP, 1 ) );
  74:../src/main.c ****     R_BSP_INT( VECT( TRAP, 2 ) );
  75:../src/main.c **** #if defined(__BANK)
  76:../src/main.c ****     R_BSP_INT( VECT( TRAP, 3 ) );
  77:../src/main.c ****     R_BSP_INT( VECT( TRAP, 4 ) );
  78:../src/main.c **** #endif
  79:../src/main.c **** #endif
  80:../src/main.c **** 
  81:../src/main.c ****     R_BSP_NOP();
  47                             		.loc 1 81 5 view .LVU19
  48                             	 ; 81 "../src/main.c" 1
  49 0036 03                      		nop
  50                             	 ; 0 "" 2
  82:../src/main.c **** 
  83:../src/main.c **** #if defined(__RXV3)
  84:../src/main.c ****     fp_Check_Using_DSQRT_FSQRT = &Check_Using_DSQRT_FSQRT;
  51                             		.loc 1 84 5 view .LVU20
  52                             		.loc 1 84 32 is_stmt 0 view .LVU21
  53 0037 FB 52 00 00 00 00       		mov.L	#_fp_Check_Using_DSQRT_FSQRT, r5
  54 003d F8 52 00 00 00 00       		mov.L	#_Check_Using_DSQRT_FSQRT, [r5]
  85:../src/main.c ****     fp_Check_Not_Using_DSQRT_FSQRT = &Check_Not_Using_DSQRT_FSQRT;
  55                             		.loc 1 85 5 is_stmt 1 view .LVU22
  56                             		.loc 1 85 36 is_stmt 0 view .LVU23
  57 0043 FB 52 00 00 00 00       		mov.L	#_fp_Check_Not_Using_DSQRT_FSQRT, r5
  58 0049 F8 52 00 00 00 00       		mov.L	#_Check_Not_Using_DSQRT_FSQRT, [r5]
  59 004f 03                      		.balign 8,3,3
  60                             	.L2:
  86:../src/main.c **** #endif
  87:../src/main.c **** 
  88:../src/main.c ****     for(;;);
  61                             		.loc 1 88 5 is_stmt 1 discriminator 1 view .LVU24
  62                             		.loc 1 88 12 discriminator 1 view .LVU25
  63                             		.loc 1 88 5 discriminator 1 view .LVU26
  64                             		.loc 1 88 12 discriminator 1 view .LVU27
  65 0050 2E 00                   		bra	.L2
  66                             	.LFE3:
  68 0052 74 10 01 00 00 00       		.section	.isrtext.trap0_isr,"ax",@progbits
  70                             	__trap0_isr:
  71                             	.LFB4:
  89:../src/main.c **** }
  90:../src/main.c **** 
  91:../src/main.c **** #if defined(__CCRX__)
  92:../src/main.c **** #pragma inline_asm _acc_
  93:../src/main.c **** static void _acc_(void){/* Nothing is enough for debugging with the `-save_acc` compiler option. */
  94:../src/main.c **** #else
  95:../src/main.c **** #define _acc_() do{}while(0)/* This is enough as of today. */
  96:../src/main.c **** #if 0
  97:../src/main.c **** static void _acc_(void){/* T.B.D. */}
  98:../src/main.c **** #endif
  99:../src/main.c **** #endif
 100:../src/main.c **** 
 101:../src/main.c **** uint32_t debug = 0x5a5a5a5a;
 102:../src/main.c **** 
 103:../src/main.c **** R_BSP_PRAGMA_STATIC_INTERRUPT(trap0_isr, VECT(TRAP, 0))
  72                             		.loc 1 103 1 view -0
  73                             		.global	$tableentry$0$.rvectors
  74                             	$tableentry$0$.rvectors:
  75                             		; Note: Interrupt Handler
  76                             		; Note: Naked Function
  77                             		.loc 1 103 1 view .LVU29
  78                             	 ; 103 "../src/main.c" 1
  79 0000 7E A1                   		PUSH.L R1                   
  80 0002 FD 6A 01                	MVFC PSW, R1                
  81 0005 FC 5A 11 08 10          	BFMOVZ #18H, #0, #4, R1, R1 
  82 000a 61 91                   	CMP #9, R1                  
  83 000c 22 05                   	BGEU ?+                     
  84 000e 75 70 09                	MVTIPL #9                   
  85                             	?:                          
  86 0011 7F A8                   	SETPSW I                    
  87 0013 FD 6A 01                	MVFC PSW, R1                
  88 0016 FC 5A 11 08 10          	BFMOVZ #18H, #0, #4, R1, R1 
  89 001b FD 76 C1 00             	SAVE R1                     
  90 001f EF 16                   	MOV.L R1, R6                
  91 0021 39 0B 00                	BSR.W _trap0_isr 
  92 0024 FD 76 D6 00             	RSTR R6                     
  93 0028 7E B1                   	POP R1                      
  94 002a 7F 95                   	RTE                         
  95                             	
  96                             	 ; 0 "" 2
  97                             		; Naked function: epilogue provided by programmer.
  98                             	.LFE4:
 101                             	_trap0_isr:
 102                             	.LFB5:
 104:../src/main.c **** R_BSP_ATTRIB_STATIC_INTERRUPT void trap0_isr(void)
 105:../src/main.c **** {
 103                             		.loc 1 105 1 view -0
 106:../src/main.c ****     debug = 0; _acc_();
 104                             		.loc 1 106 5 view .LVU31
 105                             		.loc 1 106 11 is_stmt 0 view .LVU32
 106 002c FB 52 00 00 00 00       		mov.L	#_debug, r5
 107 0032 F8 56 00                		mov.L	#0, [r5]
 108                             		.loc 1 106 16 is_stmt 1 view .LVU33
 109                             		.loc 1 106 16 view .LVU34
 107:../src/main.c **** }
 110                             		.loc 1 107 1 is_stmt 0 view .LVU35
 111 0035 02                      		rts
 112                             	.LFE5:
 114                             		.section	.isrtext.trap1_isr,"ax",@progbits
 115                             		.global	_trap1_isr
 117                             	_trap1_isr:
 118                             	.LFB6:
 108:../src/main.c **** 
 109:../src/main.c **** #if defined(__CCRX__) /*----------------------------------------------------*/
 110:../src/main.c **** 
 111:../src/main.c **** #define trap1_isr(...) R_CG_ATTRIB_INTERRUPT_EHI(trap1_isr, __VA_ARGS__)
 112:../src/main.c **** /**/
 113:../src/main.c **** #pragma interrupt trap1_isr(vect = VECT(TRAP, 1))
 114:../src/main.c **** static void trap1_isr(void)
 115:../src/main.c **** {
 116:../src/main.c ****     debug = 1; _acc_();
 117:../src/main.c **** }
 118:../src/main.c **** 
 119:../src/main.c **** #define trap2_isr(...) R_CG_ATTRIB_INTERRUPT_EI(trap2_isr, __VA_ARGS__)
 120:../src/main.c **** /**/
 121:../src/main.c **** #pragma interrupt trap2_isr(vect = VECT(TRAP, 2))
 122:../src/main.c **** static void trap2_isr(void)
 123:../src/main.c **** {
 124:../src/main.c ****     debug = 2; _acc_();
 125:../src/main.c **** }
 126:../src/main.c **** 
 127:../src/main.c **** #if defined(__BANK)
 128:../src/main.c **** 
 129:../src/main.c **** #define trap3_isr(...) R_CG_ATTRIB_INTERRUPT_BANK(trap3_isr, 15, __VA_ARGS__)
 130:../src/main.c **** /**/
 131:../src/main.c **** #pragma interrupt trap3_isr(vect = VECT(TRAP, 3))
 132:../src/main.c **** static void trap3_isr(void)
 133:../src/main.c **** {
 134:../src/main.c ****     debug = 3; _acc_();
 135:../src/main.c **** }
 136:../src/main.c **** 
 137:../src/main.c **** #define trap4_isr(...) R_CG_ATTRIB_INTERRUPT_BANK_EI(trap4_isr, 15, __VA_ARGS__)
 138:../src/main.c **** /**/
 139:../src/main.c **** #pragma interrupt trap4_isr(vect = VECT(TRAP, 4))
 140:../src/main.c **** static void trap4_isr(void)
 141:../src/main.c **** {
 142:../src/main.c ****     debug = 4; _acc_();
 143:../src/main.c **** }
 144:../src/main.c **** 
 145:../src/main.c **** #endif
 146:../src/main.c **** 
 147:../src/main.c **** #elif defined(__GNUC__) /*--------------------------------------------------*/
 148:../src/main.c **** 
 149:../src/main.c **** void trap1_isr(void) __attribute__ ((interrupt(".rvectors", VECT(TRAP, 1))));
 150:../src/main.c **** /**/
 151:../src/main.c **** #define trap1_isr(...) R_CG_ATTRIB_INTERRUPT_EHI(trap1_isr, __VA_ARGS__)
 152:../src/main.c **** /**/
 153:../src/main.c **** void trap1_isr(void)
 119                             		.loc 1 153 6 is_stmt 1 view -0
 120                             		.global	$tableentry$1$.rvectors
 121                             	$tableentry$1$.rvectors:
 122                             		; Note: Interrupt Handler
 123                             		; Note: Naked Function
 124                             		.loc 1 153 6 view .LVU37
 125                             	 ; 153 "../src/main.c" 1
 126 0000 7E A1                   		PUSH.L R1                   
 127 0002 FD 6A 01                	MVFC PSW, R1                
 128 0005 FC 5A 11 08 10          	BFMOVZ #18H, #0, #4, R1, R1 
 129 000a 61 91                   	CMP #9, R1                  
 130 000c 22 05                   	BGEU ?+                     
 131 000e 75 70 09                	MVTIPL #9                   
 132                             	?:                          
 133 0011 7F A8                   	SETPSW I                    
 134 0013 FD 6A 01                	MVFC PSW, R1                
 135 0016 FC 5A 11 08 10          	BFMOVZ #18H, #0, #4, R1, R1 
 136 001b FD 76 C1 00             	SAVE R1                     
 137 001f EF 16                   	MOV.L R1, R6                
 138 0021 39 00 00                	BSR.W __trap1_isr 
 139 0024 FD 76 D6 00             	RSTR R6                     
 140 0028 7E B1                   	POP R1                      
 141 002a 7F 95                   	RTE                         
 142                             	
 143                             	 ; 0 "" 2
 144                             		.loc 1 153 1 is_stmt 0 view .LVU38
 145                             		; Naked function: epilogue provided by programmer.
 146                             	.LFE6:
 148                             		.global	__trap1_isr
 150                             	__trap1_isr:
 151                             	.LFB7:
 154:../src/main.c **** {
 152                             		.loc 1 154 1 is_stmt 1 view -0
 155:../src/main.c ****     debug = 1; _acc_();
 153                             		.loc 1 155 5 view .LVU40
 154                             		.loc 1 155 11 is_stmt 0 view .LVU41
 155 002c FB 52 00 00 00 00       		mov.L	#_debug, r5
 156 0032 F8 56 01                		mov.L	#1, [r5]
 157                             		.loc 1 155 16 is_stmt 1 view .LVU42
 158                             		.loc 1 155 16 view .LVU43
 156:../src/main.c **** }
 159                             		.loc 1 156 1 is_stmt 0 view .LVU44
 160 0035 02                      		rts
 161                             	.LFE7:
 163                             		.section	.isrtext.trap2_isr,"ax",@progbits
 164                             		.global	_trap2_isr
 166                             	_trap2_isr:
 167                             	.LFB8:
 157:../src/main.c **** 
 158:../src/main.c **** void trap2_isr(void) __attribute__ ((interrupt(".rvectors", VECT(TRAP, 2))));
 159:../src/main.c **** /**/
 160:../src/main.c **** #define trap2_isr(...) R_CG_ATTRIB_INTERRUPT_EI(trap2_isr, __VA_ARGS__)
 161:../src/main.c **** /**/
 162:../src/main.c **** void trap2_isr(void)
 168                             		.loc 1 162 6 is_stmt 1 view -0
 169                             		.global	$tableentry$2$.rvectors
 170                             	$tableentry$2$.rvectors:
 171                             		; Note: Interrupt Handler
 172                             		; Note: Naked Function
 173                             		.loc 1 162 6 view .LVU46
 174                             	 ; 162 "../src/main.c" 1
 175 0000 7F A8                   		SETPSW I                    
 176 0002 2E 00                   	BRA.B __trap2_isr 
 177                             	
 178                             	 ; 0 "" 2
 179                             		.loc 1 162 1 is_stmt 0 view .LVU47
 180                             		; Naked function: epilogue provided by programmer.
 181                             	.LFE8:
 183                             		.global	__trap2_isr
 185                             	__trap2_isr:
 186                             	.LFB9:
 163:../src/main.c **** {
 187                             		.loc 1 163 1 is_stmt 1 view -0
 188                             		; Note: Interrupt Handler
 189 0004 6E 56                   		pushm	r5-r6
 190                             	.LCFI0:
 191 0006 FD 1F 15                		mvfaclo	#0, A0, r5
 192 0009 FD 1F 06                		mvfachi	r6
 193 000c 6E 56                   		pushm	r5-r6
 194 000e FD 1F 35                		mvfacgu	#0, A0, r5
 195 0011 FD 1F 96                		mvfaclo	#0, A1, r6
 196 0014 6E 56                   		pushm	r5-r6
 197 0016 FD 1F 85                		mvfachi	#0, A1, r5
 198 0019 FD 1F B6                		mvfacgu	#0, A1, r6
 199 001c 6E 56                   		pushm	r5-r6
 164:../src/main.c ****     debug = 2; _acc_();
 200                             		.loc 1 164 5 view .LVU49
 201                             		.loc 1 164 11 is_stmt 0 view .LVU50
 202 001e FB 52 00 00 00 00       		mov.L	#_debug, r5
 203 0024 F8 56 02                		mov.L	#2, [r5]
 204                             		.loc 1 164 16 is_stmt 1 view .LVU51
 205                             		.loc 1 164 16 view .LVU52
 165:../src/main.c **** }
 206                             		.loc 1 165 1 is_stmt 0 view .LVU53
 207 0027 6F 56                   		popm	r5-r6
 208 0029 FD 17 85                		mvtachi	r5, A1
 209 002c FD 17 B6                		mvtacgu	r6, A1
 210 002f 6F 56                   		popm	r5-r6
 211 0031 FD 17 35                		mvtacgu	r5, A0
 212 0034 FD 17 96                		mvtaclo	r6, A1
 213 0037 6F 56                   		popm	r5-r6
 214 0039 FD 17 15                		mvtaclo	r5
 215 003c FD 17 06                		mvtachi	r6
 216 003f 6F 56                   		popm	r5-r6
 217 0041 7F 95                   		rte
 218                             	.LFE9:
 220                             		.section	.isrtext.trap3_isr,"ax",@progbits
 221                             		.global	_trap3_isr
 223                             	_trap3_isr:
 224                             	.LFB10:
 166:../src/main.c **** 
 167:../src/main.c **** #if defined(__BANK)
 168:../src/main.c **** 
 169:../src/main.c **** void trap3_isr(void) __attribute__ ((interrupt(".rvectors", VECT(TRAP, 3))));
 170:../src/main.c **** /**/
 171:../src/main.c **** #define trap3_isr(...) R_CG_ATTRIB_INTERRUPT_BANK(trap3_isr, 15, __VA_ARGS__)
 172:../src/main.c **** /**/
 173:../src/main.c **** void trap3_isr(void)
 225                             		.loc 1 173 6 is_stmt 1 view -0
 226                             		.global	$tableentry$3$.rvectors
 227                             	$tableentry$3$.rvectors:
 228                             		; Note: Interrupt Handler
 229                             		; Note: Naked Function
 230                             		.loc 1 173 6 view .LVU55
 231                             	 ; 173 "../src/main.c" 1
 232 0000 FD 76 E0 0F             		SAVE #15                     
 233 0004 39 00 00                	BSR.W __trap3_isr 
 234 0007 FD 76 F0 0F             	RSTR #15                     
 235 000b 7F 95                   	RTE                         
 236                             	
 237                             	 ; 0 "" 2
 238                             		.loc 1 173 1 is_stmt 0 view .LVU56
 239                             		; Naked function: epilogue provided by programmer.
 240                             	.LFE10:
 242                             		.global	__trap3_isr
 244                             	__trap3_isr:
 245                             	.LFB11:
 174:../src/main.c **** {
 246                             		.loc 1 174 1 is_stmt 1 view -0
 175:../src/main.c ****     debug = 3; _acc_();
 247                             		.loc 1 175 5 view .LVU58
 248                             		.loc 1 175 11 is_stmt 0 view .LVU59
 249 000d FB 52 00 00 00 00       		mov.L	#_debug, r5
 250 0013 F8 56 03                		mov.L	#3, [r5]
 251                             		.loc 1 175 16 is_stmt 1 view .LVU60
 252                             		.loc 1 175 16 view .LVU61
 176:../src/main.c **** }
 253                             		.loc 1 176 1 is_stmt 0 view .LVU62
 254 0016 02                      		rts
 255                             	.LFE11:
 257                             		.section	.isrtext.trap4_isr,"ax",@progbits
 258                             		.global	_trap4_isr
 260                             	_trap4_isr:
 261                             	.LFB12:
 177:../src/main.c **** 
 178:../src/main.c **** void trap4_isr(void) __attribute__ ((interrupt(".rvectors", VECT(TRAP, 4))));
 179:../src/main.c **** /**/
 180:../src/main.c **** #define trap4_isr(...) R_CG_ATTRIB_INTERRUPT_BANK_EI(trap4_isr, 15, __VA_ARGS__)
 181:../src/main.c **** /**/
 182:../src/main.c **** void trap4_isr(void)
 262                             		.loc 1 182 6 is_stmt 1 view -0
 263                             		.global	$tableentry$4$.rvectors
 264                             	$tableentry$4$.rvectors:
 265                             		; Note: Interrupt Handler
 266                             		; Note: Naked Function
 267                             		.loc 1 182 6 view .LVU64
 268                             	 ; 182 "../src/main.c" 1
 269 0000 7F A8                   		SETPSW I                    
 270 0002 FD 76 E0 0F             	SAVE #15                     
 271 0006 39 00 00                	BSR.W __trap4_isr 
 272 0009 FD 76 F0 0F             	RSTR #15                     
 273 000d 7F 95                   	RTE                         
 274                             	
 275                             	 ; 0 "" 2
 276                             		.loc 1 182 1 is_stmt 0 view .LVU65
 277                             		; Naked function: epilogue provided by programmer.
 278                             	.LFE12:
 280                             		.global	__trap4_isr
 282                             	__trap4_isr:
 283                             	.LFB13:
 183:../src/main.c **** {
 284                             		.loc 1 183 1 is_stmt 1 view -0
 184:../src/main.c ****     debug = 4; _acc_();
 285                             		.loc 1 184 5 view .LVU67
 286                             		.loc 1 184 11 is_stmt 0 view .LVU68
 287 000f FB 52 00 00 00 00       		mov.L	#_debug, r5
 288 0015 F8 56 04                		mov.L	#4, [r5]
 289                             		.loc 1 184 16 is_stmt 1 view .LVU69
 290                             		.loc 1 184 16 view .LVU70
 185:../src/main.c **** }
 291                             		.loc 1 185 1 is_stmt 0 view .LVU71
 292 0018 02                      		rts
 293                             	.LFE13:
 295                             		.global	_debug
 296                             		.section	.data.debug,"aw"
 297                             		.balign 4
 300                             	_debug:
 301 0000 5A 5A 5A 5A             		.long	0x5a5a5a5a
 302                             		.comm	_fp_Check_Not_Using_DSQRT_FSQRT,4,4
 303                             		.comm	_fp_Check_Using_DSQRT_FSQRT,4,4
 418                             	.Letext0:
 419                             		.file 2 "c:\\renesas\\gccllvm\\gnurx-elf\\8.3.0.202204\\rx-elf\\rx-elf\\rx-elf\\include\\machine\\
 420                             		.file 3 "c:\\renesas\\gccllvm\\gnurx-elf\\8.3.0.202204\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\_std
 421                             		.file 4 "c:\\renesas\\gccllvm\\gnurx-elf\\8.3.0.202204\\rx-elf\\rx-elf\\lib\\gcc\\rx-elf\\8.3.0.20
 422                             		.file 5 "c:\\renesas\\gccllvm\\gnurx-elf\\8.3.0.202204\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\_typ
 423                             		.file 6 "c:\\renesas\\gccllvm\\gnurx-elf\\8.3.0.202204\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\reen
 424                             		.file 7 "c:\\renesas\\gccllvm\\gnurx-elf\\8.3.0.202204\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\lock
 425                             		.file 8 "C:\\Renesas\\GitHubDesktop\\workspaces\\workspace_e2v202210\\RXv3_RegBankSave\\RXv3_RegBa
 426                             		.file 9 "c:\\renesas\\githubdesktop\\workspaces\\workspace_e2v202210\\rxv3_regbanksave\\rxv3_regba
 427                             		.file 10 "C:\\Renesas\\GitHubDesktop\\workspaces\\workspace_e2v202210\\RXv3_RegBankSave\\RXv3_RegB
