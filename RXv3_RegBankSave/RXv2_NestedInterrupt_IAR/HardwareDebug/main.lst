###############################################################################
#
# IAR C/C++ Compiler V4.20.1.5803/W32 for Renesas RX      05/Jan/2023  16:04:37
# Copyright 2009-2020 IAR Systems AB.
# PC-locked license - IAR Embedded Workbench for Renesas RX, 64K KickStart Edition 4.20
#
#    Source file              =  ..\src\main.c
#    Command line             =
#        ..\src\main.c -o src\main.o --no_wrap_diagnostics -e
#        --sqrt_must_set_errno --align_func=1 -Ohs --no_size_constraints
#        --no_cross_call --debug -lC ./ -I
#        C:\Renesas\GitHubDesktop\workspaces\workspace_e2v202210\RXv3_RegBankSave\RXv2_NestedInterrupt_IAR\src\smc_gen\r_config/
#        -I
#        C:\Renesas\GitHubDesktop\workspaces\workspace_e2v202210\RXv3_RegBankSave\RXv2_NestedInterrupt_IAR\src\smc_gen\r_pincfg/
#        -I
#        C:\Renesas\GitHubDesktop\workspaces\workspace_e2v202210\RXv3_RegBankSave\RXv2_NestedInterrupt_IAR\src\smc_gen\general/
#        -I
#        C:\Renesas\GitHubDesktop\workspaces\workspace_e2v202210\RXv3_RegBankSave\RXv2_NestedInterrupt_IAR\src\smc_gen\r_bsp/
#        -I
#        C:\Renesas\GitHubDesktop\workspaces\workspace_e2v202210\RXv3_RegBankSave\RXv2_NestedInterrupt_IAR\src\smc_gen\Config_RIIC0/
#        -I
#        C:\Renesas\GitHubDesktop\workspaces\workspace_e2v202210\RXv3_RegBankSave\RXv2_NestedInterrupt_IAR\src\smc_gen\Config_SCI0/
#        -I
#        C:\Renesas\GitHubDesktop\workspaces\workspace_e2v202210\RXv3_RegBankSave\RXv2_NestedInterrupt_IAR\src\smc_gen\r_riic_rx/
#        -I
#        C:\Renesas\GitHubDesktop\workspaces\workspace_e2v202210\RXv3_RegBankSave\RXv2_NestedInterrupt_IAR\src\smc_gen\r_riic_rx\src/
#        -I
#        C:\Renesas\GitHubDesktop\workspaces\workspace_e2v202210\RXv3_RegBankSave\RXv2_NestedInterrupt_IAR\src\smc_gen\r_sci_iic_rx/
#        -I
#        C:\Renesas\GitHubDesktop\workspaces\workspace_e2v202210\RXv3_RegBankSave\RXv2_NestedInterrupt_IAR\src\smc_gen\r_sci_iic_rx\src/
#        -I
#        C:\Renesas\GitHubDesktop\workspaces\workspace_e2v202210\RXv3_RegBankSave\RXv2_NestedInterrupt_IAR\src\smc_gen\Config_MTU3_MTU4/
#        --remarks --save_acc --endian l --core rxv2 --fpu=32 --data_model=f
#        --double=32 --int=32 --dlib_config
#        C:/Renesas/EWB/8.4/rx/LIB/dlrxflln.h
#    Locale                   =  C
#    List file                =  ./main.lst
#    Object file              =  src\main.o
#    Runtime model:              
#      __SystemLibrary        =  DLib
#      __calling_conv         =  abi10
#      __core                 =  2
#      __dlib_file_descriptor =  0
#      __dlib_version         =  6
#      __double_size          =  32
#      __endian               =  l
#      __enum_size            =  *
#      __fpu                  =  1
#      __int_size             =  32
#      __lock_R10             =  0
#      __lock_R11             =  0
#      __lock_R12             =  0
#      __lock_R13             =  0
#      __lock_R8              =  0
#      __lock_R9              =  0
#      __rt_version           =  5
#      __size_limit           =  65536
#
###############################################################################

C:\Renesas\GitHubDesktop\workspaces\workspace_e2v202210\RXv3_RegBankSave\RXv2_NestedInterrupt_IAR\src\main.c
      1          #include "r_smc_entry.h"
      2          
      3          #if defined(__RXV3) && !defined(BSP_BOARD_GENERIC_RX66T)
      4          #define __BANK 1
      5          #endif
      6          
      7          void main(void);
      8          #if defined(__RXV3)
      9          void Check_Using_DSQRT_FSQRT(void);
     10          void Check_Not_Using_DSQRT_FSQRT(void);
     11          void (*fp_Check_Using_DSQRT_FSQRT)(void);
     12          void (*fp_Check_Not_Using_DSQRT_FSQRT)(void);
     13          #endif
     14          
     15          #define VECT_TRAP_0 0
     16          #define VECT_TRAP_1 1
     17          #define VECT_TRAP_2 2
     18          #if defined(__BANK)
     19          #define VECT_TRAP_3 3
     20          #define VECT_TRAP_4 4
     21          #endif
     22          

   \                                 In section .text, align 1, keep-with-next
     23          void main(void)
     24          {
     25              R_BSP_SET_IPL( MY_BSP_CFG_UNNESTED_IPL_MAX - 1 );
   \                     _main:
   \   000000 75 70 08     MVTIPL    #0x8
     26              R_BSP_INT( VECT( TRAP, 0 ) );
   \   000003 75 60 00     INT       #0x0
     27              R_BSP_INT( VECT( TRAP, 1 ) );
   \   000006 75 60 01     INT       #0x1
     28              R_BSP_INT( VECT( TRAP, 2 ) );
   \   000009 75 60 02     INT       #0x2
     29          #if defined(__BANK)
     30              R_BSP_INT( VECT( TRAP, 3 ) );
     31              R_BSP_INT( VECT( TRAP, 4 ) );
     32          #endif
     33          
     34              R_BSP_SET_IPL( MY_BSP_CFG_UNNESTED_IPL_MAX );
   \   00000C 75 70 09     MVTIPL    #0x9
     35              R_BSP_INT( VECT( TRAP, 0 ) );
   \   00000F 75 60 00     INT       #0x0
     36              R_BSP_INT( VECT( TRAP, 1 ) );
   \   000012 75 60 01     INT       #0x1
     37              R_BSP_INT( VECT( TRAP, 2 ) );
   \   000015 75 60 02     INT       #0x2
     38          #if defined(__BANK)
     39              R_BSP_INT( VECT( TRAP, 3 ) );
     40              R_BSP_INT( VECT( TRAP, 4 ) );
     41          #endif
     42          
     43              R_BSP_SET_IPL( MY_BSP_CFG_UNNESTED_IPL_MAX + 1 );
   \   000018 75 70 0A     MVTIPL    #0xa
     44              R_BSP_INT( VECT( TRAP, 0 ) );
   \   00001B 75 60 00     INT       #0x0
     45              R_BSP_INT( VECT( TRAP, 1 ) );
   \   00001E 75 60 01     INT       #0x1
     46              R_BSP_INT( VECT( TRAP, 2 ) );
   \   000021 75 60 02     INT       #0x2
     47          #if defined(__BANK)
     48              R_BSP_INT( VECT( TRAP, 3 ) );
     49              R_BSP_INT( VECT( TRAP, 4 ) );
     50          #endif
     51          
     52          #if 0 /* later */
     53              R_BSP_SET_IPL( BSP_CFG_FIT_IPL_MAX - 1 );
     54              R_BSP_INT( VECT( TRAP, 0 ) );
     55              R_BSP_INT( VECT( TRAP, 1 ) );
     56              R_BSP_INT( VECT( TRAP, 2 ) );
     57          #if defined(__BANK)
     58              R_BSP_INT( VECT( TRAP, 3 ) );
     59              R_BSP_INT( VECT( TRAP, 4 ) );
     60          #endif
     61          
     62              R_BSP_SET_IPL( BSP_CFG_FIT_IPL_MAX );
     63              R_BSP_INT( VECT( TRAP, 0 ) );
     64              R_BSP_INT( VECT( TRAP, 1 ) );
     65              R_BSP_INT( VECT( TRAP, 2 ) );
     66          #if defined(__BANK)
     67              R_BSP_INT( VECT( TRAP, 3 ) );
     68              R_BSP_INT( VECT( TRAP, 4 ) );
     69          #endif
     70          
     71              R_BSP_SET_IPL( BSP_CFG_FIT_IPL_MAX + 1 );
     72              R_BSP_INT( VECT( TRAP, 0 ) );
     73              R_BSP_INT( VECT( TRAP, 1 ) );
     74              R_BSP_INT( VECT( TRAP, 2 ) );
     75          #if defined(__BANK)
     76              R_BSP_INT( VECT( TRAP, 3 ) );
     77              R_BSP_INT( VECT( TRAP, 4 ) );
     78          #endif
     79          #endif
     80          
     81              R_BSP_NOP();
   \   000024 03           NOP
     82          
     83          #if defined(__RXV3)
     84              fp_Check_Using_DSQRT_FSQRT = &Check_Using_DSQRT_FSQRT;
     85              fp_Check_Not_Using_DSQRT_FSQRT = &Check_Not_Using_DSQRT_FSQRT;
     86          #endif
     87          
     88              for(;;);
   \                     ??main_0:
   \   000025 2E 00        BRA.B     ??main_0      ;  I 01
     89          }
     90          
     91          #if defined(__CCRX__)
     92          #pragma inline_asm _acc_
     93          static void _acc_(void){/* Nothing is enough for debugging with the `-save_acc` compiler option. */}
     94          #else
     95          #define _acc_() do{}while(0)/* This is enough as of today. */
     96          #if 0
     97          static void _acc_(void){/* T.B.D. */}
     98          #endif
     99          #endif
    100          

   \                                 In section .data24.data, align 4
    101          uint32_t debug = 0x5a5a5a5a;
   \                     _debug:
   \   000000 5A5A'5A5A    DC32 1'515'870'810
    102          

   \                                 In section .text, align 1, keep-with-next
    103          R_BSP_PRAGMA_STATIC_INTERRUPT(trap0_isr, VECT(TRAP, 0))
   \                     ___interrupt_0:
   \   000000 7E A1        PUSH.L R1
   \   000002 FD 6A 01     MVFC PSW, R1
   \   000005 69 81        SHLR #24, R1
   \   000007 64 F1        AND #15, R1
   \   000009 61 91        CMP #0x9, R1
   \   00000B 22 05        BGEU ??_lab1
   \   00000D 75 70 09     MVTIPL #0x9
   \                     ??_lab1:
   \   000010 7F A8        SETPSW I
   \   000012 7E B1        POP R1
   \   000014 38 ....      BRA.W _trap0_isr
   \   000017 7F 95        RTE
   \   000019              REQUIRE _trap0_isr

   \                                 In section .text, align 1, keep-with-next
    104          R_BSP_ATTRIB_STATIC_INTERRUPT void trap0_isr(void)
    105          {
   \                     _trap0_isr:
   \   000000 7E A1        PUSH.L    R1    ;  N
    106              debug = 0; _acc_();
   \   000002 FB 1E        MOV.L     #_debug:24,R1 ;  N 

   \          ..'....
   \   000007 F8 16 00     MOV.L     #0x0,[R1]     ;  N
    107          }
   \   00000A 7E B1        POP       R1    ;  N
   \   00000C 7F 95        RTE
    108          
    109          #if defined(__CCRX__) /*----------------------------------------------------*/
    110          
    111          #define trap1_isr(...) R_CG_ATTRIB_INTERRUPT_EHI(trap1_isr, __VA_ARGS__)
    112          /**/
    113          #pragma interrupt trap1_isr(vect = VECT(TRAP, 1))
    114          static void trap1_isr(void)
    115          {
    116              debug = 1; _acc_();
    117          }
    118          
    119          #define trap2_isr(...) R_CG_ATTRIB_INTERRUPT_EI(trap2_isr, __VA_ARGS__)
    120          /**/
    121          #pragma interrupt trap2_isr(vect = VECT(TRAP, 2))
    122          static void trap2_isr(void)
    123          {
    124              debug = 2; _acc_();
    125          }
    126          
    127          #if defined(__BANK)
    128          
    129          #define trap3_isr(...) R_CG_ATTRIB_INTERRUPT_BANK(trap3_isr, 15, __VA_ARGS__)
    130          /**/
    131          #pragma interrupt trap3_isr(vect = VECT(TRAP, 3))
    132          static void trap3_isr(void)
    133          {
    134              debug = 3; _acc_();
    135          }
    136          
    137          #define trap4_isr(...) R_CG_ATTRIB_INTERRUPT_BANK_EI(trap4_isr, 15, __VA_ARGS__)
    138          /**/
    139          #pragma interrupt trap4_isr(vect = VECT(TRAP, 4))
    140          static void trap4_isr(void)
    141          {
    142              debug = 4; _acc_();
    143          }
    144          
    145          #endif
    146          
    147          #elif defined(__GNUC__) /*--------------------------------------------------*/
    148          
    149          void trap1_isr(void) __attribute__ ((interrupt(".rvectors", VECT(TRAP, 1))));
    150          /**/
    151          #define trap1_isr(...) R_CG_ATTRIB_INTERRUPT_EHI(trap1_isr, __VA_ARGS__)
    152          /**/
    153          void trap1_isr(void)
    154          {
    155              debug = 1; _acc_();
    156          }
    157          
    158          void trap2_isr(void) __attribute__ ((interrupt(".rvectors", VECT(TRAP, 2))));
    159          /**/
    160          #define trap2_isr(...) R_CG_ATTRIB_INTERRUPT_EI(trap2_isr, __VA_ARGS__)
    161          /**/
    162          void trap2_isr(void)
    163          {
    164              debug = 2; _acc_();
    165          }
    166          
    167          #if defined(__BANK)
    168          
    169          void trap3_isr(void) __attribute__ ((interrupt(".rvectors", VECT(TRAP, 3))));
    170          /**/
    171          #define trap3_isr(...) R_CG_ATTRIB_INTERRUPT_BANK(trap3_isr, 15, __VA_ARGS__)
    172          /**/
    173          void trap3_isr(void)
    174          {
    175              debug = 3; _acc_();
    176          }
    177          
    178          void trap4_isr(void) __attribute__ ((interrupt(".rvectors", VECT(TRAP, 4))));
    179          /**/
    180          #define trap4_isr(...) R_CG_ATTRIB_INTERRUPT_BANK_EI(trap4_isr, 15, __VA_ARGS__)
    181          /**/
    182          void trap4_isr(void)
    183          {
    184              debug = 4; _acc_();
    185          }
    186          
    187          #endif
    188          
    189          #elif defined(__ICCRX__) /*-------------------------------------------------*/
    190          
    191          #define trap1_isr(...) R_CG_ATTRIB_INTERRUPT_EHI(trap1_isr, __VA_ARGS__)
    192          /**/
    193          #pragma vector = VECT(TRAP, 1)

   \                                 In section .text, align 1, keep-with-next
   \                     ___interrupt_1:
   \   000000 7E A1        PUSH.L R1
   \   000002 FD 6A 01     MVFC PSW, R1
   \   000005 69 81        SHLR #24, R1
   \   000007 64 F1        AND #15, R1
   \   000009 61 91        CMP #0x9, R1
   \   00000B 22 05        BGEU ??_lab1_1
   \   00000D 75 70 09     MVTIPL #0x9
   \                     ??_lab1_1:
   \   000010 7F A8        SETPSW I
   \   000012 7E B1        POP R1
   \   000014 ..           BRA.S _trap1_isr
   \   000015 7F 95        RTE
   \   000017              REQUIRE _trap1_isr

   \                                 In section .text, align 1, keep-with-next
    194          __interrupt static void trap1_isr(void) // Remark[Pe082]: storage class is not first
                             ^
Remark[Pe082]: storage class is not first
    195          {
   \                     _trap1_isr:
   \   000000 7E A1        PUSH.L    R1    ;  N
    196              debug = 1; _acc_();
   \   000002 FB 1E        MOV.L     #_debug:24,R1 ;  N 

   \          ..'....
   \   000007 F8 16 01     MOV.L     #0x1,[R1]     ;  N
    197          }
   \   00000A 7E B1        POP       R1    ;  N
   \   00000C 7F 95        RTE
    198          
    199          #define trap2_isr(...) R_CG_ATTRIB_INTERRUPT_EI(trap2_isr, __VA_ARGS__)
    200          /**/
    201          #pragma vector = VECT(TRAP, 2)

   \                                 In section .text, align 1, keep-with-next
   \                     ___interrupt_2:
   \   000000 7F A8        SETPSW I
   \   000002 ..           BRA.S _trap2_isr
   \   000003 7F 95        RTE
   \   000005              REQUIRE _trap2_isr

   \                                 In section .text, align 1, keep-with-next
    202          __interrupt static void trap2_isr(void) // Remark[Pe082]: storage class is not first
                             ^
Remark[Pe082]: storage class is not first

  static void r_Config_SCI0_callback_transmitend(void);
              ^
"C:\Renesas\GitHubDesktop\workspaces\workspace_e2v202210\RXv3_RegBankSave\RXv2_NestedInterrupt_IAR\src\smc_gen\Config_SCI0\Config_SCI0.h",59  Remark[Pe177]: function "r_Config_SCI0_callback_transmitend" was declared but never referenced

  static void r_Config_SCI0_callback_receiveend(void);
              ^
"C:\Renesas\GitHubDesktop\workspaces\workspace_e2v202210\RXv3_RegBankSave\RXv2_NestedInterrupt_IAR\src\smc_gen\Config_SCI0\Config_SCI0.h",60  Remark[Pe177]: function "r_Config_SCI0_callback_receiveend" was declared but never referenced

  static void r_Config_RIIC0_callback_transmitend(void);
              ^
"C:\Renesas\GitHubDesktop\workspaces\workspace_e2v202210\RXv3_RegBankSave\RXv2_NestedInterrupt_IAR\src\smc_gen\Config_RIIC0\Config_RIIC0.h",63  Remark[Pe177]: function "r_Config_RIIC0_callback_transmitend" was declared but never referenced

  static void r_Config_RIIC0_callback_receiveend(void);
              ^
"C:\Renesas\GitHubDesktop\workspaces\workspace_e2v202210\RXv3_RegBankSave\RXv2_NestedInterrupt_IAR\src\smc_gen\Config_RIIC0\Config_RIIC0.h",64  Remark[Pe177]: function "r_Config_RIIC0_callback_receiveend" was declared but never referenced

  static void r_Config_RIIC0_callback_error(MD_STATUS status);
              ^
"C:\Renesas\GitHubDesktop\workspaces\workspace_e2v202210\RXv3_RegBankSave\RXv2_NestedInterrupt_IAR\src\smc_gen\Config_RIIC0\Config_RIIC0.h",65  Remark[Pe177]: function "r_Config_RIIC0_callback_error" was declared but never referenced
    203          {
   \                     _trap2_isr:
   \   000000 7E A1        PUSH.L    R1    ;  N
    204              debug = 2; _acc_();
   \   000002 FB 1E        MOV.L     #_debug:24,R1 ;  N 

   \          ..'....
   \   000007 F8 16 02     MOV.L     #0x2,[R1]     ;  N
    205          }
   \   00000A 7E B1        POP       R1    ;  N
   \   00000C 7F 95        RTE
    206          
    207          #if defined(__BANK)
    208          
    209          #define trap3_isr(...) R_CG_ATTRIB_INTERRUPT_BANK(trap3_isr, 15, __VA_ARGS__)
    210          /**/
    211          #pragma vector = VECT(TRAP, 3)
    212          __interrupt static void trap3_isr(void) // Remark[Pe082]: storage class is not first
    213          {
    214              debug = 3; _acc_();
    215          }
    216          
    217          #define trap4_isr(...) R_CG_ATTRIB_INTERRUPT_BANK_EI(trap4_isr, 15, __VA_ARGS__)
    218          /**/
    219          #pragma vector = VECT(TRAP, 4)
    220          __interrupt static void trap4_isr(void) // Remark[Pe082]: storage class is not first
    221          {
    222              debug = 4; _acc_();
    223          }
    224          
    225          #endif
    226          
    227          #endif /*-------------------------------------------------------------------*/

   Maximum stack usage in bytes:

   ISTACK Function
   ------ --------
      8   _trap0_isr
      8   _trap1_isr
      8   _trap2_isr
      4   main
     12   trap0_isr
     12   trap1_isr
     12   trap2_isr


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      25  _trap0_isr
      23  _trap1_isr
       5  _trap2_isr
       4  debug
      39  main
      14  trap0_isr
      14  trap1_isr
      14  trap2_isr

 
   4 bytes in section .data24.data
 134 bytes in section .text
 
 134 bytes of CODE memory
   4 bytes of DATA memory

Errors: none
Warnings: none
